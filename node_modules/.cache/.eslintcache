[{"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/index.js":"1","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/reportWebVitals.js":"2","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/App.js":"3","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/routes/index.js":"4","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/SignIn/index.js":"5","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/SignUp/index.js":"6","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/Dashboard/index.js":"7","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/contexts/auth.js":"8","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/services/firebaseConnection.js":"9","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/routes/Private.js":"10","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/components/Header/index.js":"11","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/Profile/index.js":"12","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/components/Title/index.js":"13","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/Customers/index.js":"14","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/New/index.js":"15","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/components/Modal/index.js":"16"},{"size":542,"mtime":1678490716583,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1677878596691,"results":"19","hashOfConfig":"18"},{"size":431,"mtime":1678142631153,"results":"20","hashOfConfig":"18"},{"size":1208,"mtime":1678566733905,"results":"21","hashOfConfig":"18"},{"size":1351,"mtime":1678144333571,"results":"22","hashOfConfig":"18"},{"size":1619,"mtime":1678140671452,"results":"23","hashOfConfig":"18"},{"size":6301,"mtime":1678662190163,"results":"24","hashOfConfig":"18"},{"size":3295,"mtime":1678457279238,"results":"25","hashOfConfig":"18"},{"size":712,"mtime":1677886521843,"results":"26","hashOfConfig":"18"},{"size":348,"mtime":1678382224809,"results":"27","hashOfConfig":"18"},{"size":858,"mtime":1678383907082,"results":"28","hashOfConfig":"18"},{"size":4333,"mtime":1678464834198,"results":"29","hashOfConfig":"18"},{"size":168,"mtime":1678389707640,"results":"30","hashOfConfig":"18"},{"size":2140,"mtime":1678474273487,"results":"31","hashOfConfig":"18"},{"size":6574,"mtime":1678569042672,"results":"32","hashOfConfig":"18"},{"size":1380,"mtime":1678663110510,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"wvuqvu",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/index.js",[],[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/reportWebVitals.js",[],[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/App.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/routes/index.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/SignIn/index.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/SignUp/index.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/Dashboard/index.js",["87","88"],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/contexts/auth.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/services/firebaseConnection.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/routes/Private.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/components/Header/index.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/Profile/index.js",["89","90"],[],"import Header from '../../components/Header';\nimport Title from '../../components/Title';\nimport './profile.css';\nimport { FiSettings, FiUpload } from 'react-icons/fi';\nimport avatar from '../../assets/avatar.png';\nimport { AuthContext } from '../../contexts/auth';\nimport { useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { doc, updateDoc } from 'firebase/firestore';\nimport { db, storage } from '../../services/firebaseConnection';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\nexport default function Profile() {\n  const { user, storageUser, setUser, logout } = useContext(AuthContext);\n\n  const [avatarUrl, setAvatarUrl] = useState(user && user.avatarUrl);\n  const [imageAvatar, setImageAvatar] = useState(null);\n  const [nome, setNome] = useState(user && user.nome);\n  const [email, setEmail] = useState(user && user.email);\n\n  function handleFile(e) {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n\n      if (image.type === 'image/jpeg' || image.type === 'image/png') {\n        setImageAvatar(image);\n        setAvatarUrl(URL.createObjectURL(image));\n      } else {\n        alert('Envie uma imagem no formato PNG ou JPG');\n        setImageAvatar(null);\n        return;\n      }\n    }\n  }\n  async function handleUpload() {\n    const currentUid = user.uid;\n\n    const uploadRef = ref(storage, `images/${currentUid}/${imageAvatar.name}`); // criando a ref\n    const uploadTask = uploadBytes(uploadRef, imageAvatar) // enviando a imagem (onde e o que)\n      .then((snapshot) => {\n        // pegando url da imagem e atualiza o banco com as info novas\n        getDownloadURL(snapshot.ref).then(async (dowloadURL) => {\n          let urlFoto = dowloadURL;\n          const docRef = doc(db, 'users', user.uid);\n          await updateDoc(docRef, {\n            avatarUrl: urlFoto,\n            nome: nome,\n          }).then(() => {\n            // caso de sucesso\n            let data = {\n              ...user,\n              nome: nome,\n              avatarUrl: urlFoto,\n            };\n            // atualizando context e localstorage\n            setUser(data);\n            storageUser(data);\n            toast.success('Atualizado com sucesso!');\n          });\n        });\n      });\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (imageAvatar === null && nome !== '') {\n      // atualizar apenas o nome do usuario\n      const docRef = doc(db, 'users', user.uid);\n      await updateDoc(docRef, {\n        nome: nome,\n      }).then(() => {\n        let data = {\n          ...user,\n          nome: nome,\n        };\n        setUser(data);\n        storageUser(data);\n        toast.success('Atualizado com sucesso!');\n      });\n    } else if (nome !== '' && imageAvatar !== null) {\n      // atualizar tanto nome quanto a foto\n      handleUpload();\n    }\n  }\n  return (\n    <div>\n      <Header />\n      <div className=\"content\">\n        <Title name=\"Minha conta\">\n          <FiSettings size={25} />\n        </Title>\n        <div className=\"container\">\n          <form className=\"form-profile\" onSubmit={handleSubmit}>\n            <label className=\"label-avatar\">\n              <span>\n                <FiUpload color=\"#FFF\" size={25} />\n              </span>\n              <input type=\"file\" accept=\"image/*\" onChange={handleFile} />{' '}\n              <br />\n              {avatarUrl === null ? (\n                <img\n                  src={avatar}\n                  alt=\"Foto de perfil\"\n                  width={250}\n                  height={250}\n                />\n              ) : (\n                <img\n                  src={avatarUrl}\n                  alt=\"Foto de perfil\"\n                  width={250}\n                  height={250}\n                />\n              )}\n            </label>\n            <label>Nome</label>\n            <input\n              type=\"text\"\n              value={nome}\n              onChange={(e) => setNome(e.target.value)}\n            />\n\n            <label>Email</label>\n            <input type=\"text\" value={email} disabled={true} />\n\n            <button type=\"submit\">Salvar</button>\n          </form>\n        </div>\n        <div className=\"container\">\n          <button className=\"logout-btn\" onClick={() => logout()}>\n            Sair\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/components/Title/index.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/Customers/index.js",[],[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/pages/New/index.js",["91","92","93"],[],"import { useState, useEffect, useContext } from 'react';\nimport Header from '../../components/Header';\nimport Title from '../../components/Title';\nimport { FiPlusCircle } from 'react-icons/fi';\nimport { AuthContext } from '../../contexts/auth';\nimport { db } from '../../services/firebaseConnection';\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  doc,\n  addDoc,\n  updateDoc,\n} from '@firebase/firestore';\nimport { toast } from 'react-toastify';\nimport './new.css';\nimport { list } from '@firebase/storage';\nimport { useParams, useNavigate } from 'react-router';\n\nconst listRef = collection(db, 'costomers');\nexport default function New() {\n  const { user } = useContext(AuthContext);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [customers, setCustomers] = useState([]);\n  const [loadCustomer, setLoadCustomer] = useState(true);\n  const [customerSelected, setCustomerSelected] = useState(0);\n\n  const [complemento, setComplemento] = useState('');\n  const [assunto, setAssunto] = useState('Suporte');\n  const [status, setStatus] = useState('Aberto');\n  const [idCostumer, setIdCostumer] = useState(false);\n\n  useEffect(() => {\n    async function loadCustomers() {\n      const querySnapshot = await getDocs(listRef)\n        .then((snapshot) => {\n          let lista = [];\n          snapshot.forEach((doc) => {\n            lista.push({\n              id: doc.id,\n              nomeFantasia: doc.data().nomeFantasia,\n            });\n          });\n          if (snapshot.docs.size === 0) {\n            console.log('NENHUMA EMPRESA ENCONTRADA');\n            setCustomers([{ id: '1', nomeFantasia: 'FREELA' }]);\n            setLoadCustomer(false);\n            return;\n          }\n\n          setCustomers(lista);\n          setLoadCustomer(false);\n\n          if (id) {\n            loadId(lista);\n          }\n        })\n        .catch((error) => {\n          console.log('ERRO AO BUSCAR OS CLIENTES', error);\n          setLoadCustomer(false);\n          setCustomers([{ id: '1', nomeFantasia: 'FREELA' }]);\n        });\n    }\n    loadCustomers();\n  }, [id]);\n\n  async function loadId(lista) {\n    const docRef = doc(db, 'chamados', id); // buscar chamado\n    await getDoc(docRef) //buscando este documento\n      .then((snapshot) => {\n        setAssunto(snapshot.data().assunto);\n        setStatus(snapshot.data().status);\n        setComplemento(snapshot.data().complemento);\n\n        let index = lista.findIndex(\n          (item) => item.id === snapshot.data().clienteId,\n        );\n        setCustomerSelected(index);\n        setIdCostumer(true);\n      })\n      .catch((error) => {\n        console.log(error);\n        setIdCostumer(false);\n      });\n  }\n  function handleOptionChange(e) {\n    setStatus(e.target.value); // recebendo o valor do status\n  }\n\n  function handleChangeSelect(e) {\n    setAssunto(e.target.value);\n  }\n\n  function handleChangeCustomer(e) {\n    setCustomerSelected(e.target.value);\n  }\n  async function handleRegister(e) {\n    e.preventDefault();\n\n    if (idCostumer) {\n      // Atualizando chamado\n      const docRef = doc(db, 'chamados', id);\n      await updateDoc(docRef, {\n        cliente: customers[customerSelected].nomeFantasia,\n        clienteId: customers[customerSelected].id,\n        assunto: assunto,\n        complemento: complemento,\n        status: status,\n        userId: user.uid,\n      })\n        .then(() => {\n          toast.info('Chamado atualizado com sucesso!');\n          setCustomerSelected(0);\n          setComplemento('');\n          navigate('/dashboard');\n        })\n        .catch((error) => {\n          toast.error('Ops, erro ao atualizar esse chamado!');\n          console.log(error);\n        });\n\n      return;\n    }\n\n    // registrar um chamado\n    await addDoc(collection(db, 'chamados'), {\n      created: new Date(),\n      cliente: customers[customerSelected].nomeFantasia,\n      clienteId: customers[customerSelected].id,\n      assunto: assunto,\n      complemento: complemento,\n      status: status,\n      userId: user.uid,\n    })\n      .then(() => {\n        toast.success('Chamado registrado!');\n        setComplemento('');\n        setCustomerSelected(0);\n      })\n      .catch((error) => {\n        toast.error('Ops, erro ao registrar, tente mais tarde!');\n        console.log(error);\n      });\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"content\">\n        <Title name={id ? 'Editando Chamado' : 'Novo Chamado'}>\n          <FiPlusCircle size={25} />\n        </Title>\n        <div className=\"container\">\n          <form className=\"form-profile\" onSubmit={handleRegister}>\n            <label>Clientes</label>\n            {loadCustomer ? (\n              <input type=\"text\" disabled={true} value=\"Carrregando...\" />\n            ) : (\n              <select value={customerSelected} onChange={handleChangeCustomer}>\n                {customers.map((item, index) => {\n                  return (\n                    <option key={index} value={index}>\n                      {item.nomeFantasia}\n                    </option>\n                  );\n                })}\n              </select>\n            )}\n            <label>Assunto</label>\n            <select value={assunto} onChange={handleChangeSelect}>\n              <option value=\"Suporte\">Suporte</option>\n              <option value=\"Financeiro\">Financeiro</option>\n            </select>\n            <label>Status</label>\n            <div className=\"status\">\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value=\"Aberto\"\n                onChange={handleOptionChange}\n                checked={status === 'Aberto'}\n              />\n              <span>Em aberto</span>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value=\"Progresso\"\n                onChange={handleOptionChange}\n                checked={status === 'Progresso'}\n              />\n              <span>Progresso</span>\n              <input\n                type=\"radio\"\n                name=\"radio\"\n                value=\"Atendido\"\n                onChange={handleOptionChange}\n                checked={status === 'Atendido'}\n              />\n              <span>Atendido</span>\n            </div>\n            <label>Complemento</label>\n            <textarea\n              type=\"text\"\n              placeholder=\"Descreva seu problema(opcional).\"\n              value={complemento}\n              onChange={(e) => setComplemento(e.target.value)}\n            />\n            <button type=\"submit\">Registrar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n",[],"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/components/Modal/index.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":20},{"ruleId":"94","severity":1,"message":"98","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":21},{"ruleId":"94","severity":1,"message":"99","line":19,"column":17,"nodeType":"96","messageId":"97","endLine":19,"endColumn":25},{"ruleId":"94","severity":1,"message":"100","line":39,"column":11,"nodeType":"96","messageId":"97","endLine":39,"endColumn":21},{"ruleId":"94","severity":1,"message":"101","line":17,"column":10,"nodeType":"96","messageId":"97","endLine":17,"endColumn":14},{"ruleId":"94","severity":1,"message":"102","line":37,"column":13,"nodeType":"96","messageId":"97","endLine":37,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":67,"column":6,"nodeType":"105","endLine":67,"endColumn":10,"suggestions":"106"},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'setEmail' is assigned a value but never used.","'uploadTask' is assigned a value but never used.","'list' is defined but never used.","'querySnapshot' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadId'. Either include it or remove the dependency array.","ArrayExpression",["107"],{"desc":"108","fix":"109"},"Update the dependencies array to be: [id, loadId]",{"range":"110","text":"111"},[2066,2070],"[id, loadId]"]