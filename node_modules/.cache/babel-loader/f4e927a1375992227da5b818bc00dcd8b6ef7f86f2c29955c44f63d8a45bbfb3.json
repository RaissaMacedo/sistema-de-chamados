{"ast":null,"code":"var _jsxFileName = \"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/contexts/auth.js\",\n  _s = $RefreshSig$();\n// autenticação\nimport { useState, createContext, useEffect } from 'react';\nimport { auth, db } from '../services/firebaseConnection';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { doc, getDoc, setDoc } from '@firebase/firestore';\nimport { useNavigate } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n// O contexto foi projetado para compartilhar dados que podem ser considerados \"globais\"\nfunction AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loadingAuth, setLoadingAuth] = useState(false);\n  const navigate = useNavigate();\n  async function signIn(email, password) {\n    setLoadingAuth(true);\n    await signInWithEmailAndPassword(auth, email, password).then(async value => {\n      let uid = value.user.uid;\n      const docRef = doc(db, 'users', uid);\n      const docSnap = await getDoc(docRef);\n      let data = {\n        uid: uid,\n        nome: docSnap.data().nome,\n        email: value.user.email,\n        avatarUrl: docSnap.data().avatarUrl\n      };\n      setUser(data);\n      storageUser(data);\n      setLoadingAuth(false);\n      toast.success('Bem-vindo(a)');\n      navigate('/dashboard');\n    }).catch(error => {\n      console.log(error);\n      setLoadingAuth(false);\n      toast.error('Ops, algo deu errado!');\n    });\n  }\n  // cadastrar um novo user\n  async function signUp(email, password, name) {\n    setLoadingAuth(true);\n    await createUserWithEmailAndPassword(auth, email, password).then(async value => {\n      let uid = value.user.uid;\n      await setDoc(doc(db, 'users', uid), {\n        nome: name,\n        avatarUrl: null\n      }) // criando uma coleção de users e dentro criando doc de usuario\n      .then(() => {\n        let data = {\n          uid: uid,\n          nome: name,\n          email: value.user.email,\n          avatarUrl: null\n        };\n        setUser(data);\n        storageUser(data);\n        setLoadingAuth(false);\n        toast.success('Seja bem-vindo ao sistema!');\n        navigate('/dashboard');\n      });\n    }).catch(error => {\n      console.log(error);\n      setLoadingAuth(false);\n    });\n  }\n  function storageUser(data) {\n    localStorage.setItem('ticketsPRO', JSON.stringify(data));\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user,\n      signIn,\n      signUp,\n      loadingAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"02ekPr7dS5TlY/kLdenSpMQdKko=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","createContext","useEffect","auth","db","createUserWithEmailAndPassword","signInWithEmailAndPassword","doc","getDoc","setDoc","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","loadingAuth","setLoadingAuth","navigate","signIn","email","password","then","value","uid","docRef","docSnap","data","nome","avatarUrl","storageUser","success","catch","error","console","log","signUp","name","localStorage","setItem","JSON","stringify","Provider","signed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/contexts/auth.js"],"sourcesContent":["// autenticação\nimport { useState, createContext, useEffect } from 'react';\nimport { auth, db } from '../services/firebaseConnection';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from '@firebase/auth';\nimport { doc, getDoc, setDoc } from '@firebase/firestore';\n\nimport { useNavigate } from 'react-router';\nimport { toast } from 'react-toastify';\n\nexport const AuthContext = createContext({});\n// O contexto foi projetado para compartilhar dados que podem ser considerados \"globais\"\nfunction AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loadingAuth, setLoadingAuth] = useState(false);\n\n  const navigate = useNavigate();\n\n  async function signIn(email, password) {\n    setLoadingAuth(true);\n\n    await signInWithEmailAndPassword(auth, email, password)\n      .then(async (value) => {\n        let uid = value.user.uid;\n\n        const docRef = doc(db, 'users', uid);\n        const docSnap = await getDoc(docRef);\n\n        let data = {\n          uid: uid,\n          nome: docSnap.data().nome,\n          email: value.user.email,\n          avatarUrl: docSnap.data().avatarUrl,\n        };\n\n        setUser(data);\n        storageUser(data);\n        setLoadingAuth(false);\n        toast.success('Bem-vindo(a)');\n        navigate('/dashboard');\n      })\n      .catch((error) => {\n        console.log(error);\n\n        setLoadingAuth(false);\n        toast.error('Ops, algo deu errado!');\n      });\n  }\n  // cadastrar um novo user\n  async function signUp(email, password, name) {\n    setLoadingAuth(true);\n\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then(async (value) => {\n        let uid = value.user.uid;\n\n        await setDoc(doc(db, 'users', uid), {\n          nome: name,\n          avatarUrl: null,\n        }) // criando uma coleção de users e dentro criando doc de usuario\n          .then(() => {\n            let data = {\n              uid: uid,\n              nome: name,\n              email: value.user.email,\n              avatarUrl: null,\n            };\n            setUser(data);\n            storageUser(data);\n            setLoadingAuth(false);\n            toast.success('Seja bem-vindo ao sistema!');\n            navigate('/dashboard');\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoadingAuth(false);\n      });\n  }\n  function storageUser(data) {\n    localStorage.setItem('ticketsPRO', JSON.stringify(data));\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        signed: !!user,\n        user,\n        signIn,\n        signUp,\n        loadingAuth,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\nexport default AuthProvider;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,EAAE,QAAQ,gCAAgC;AACzD,SACEC,8BAA8B,EAC9BC,0BAA0B,QACrB,gBAAgB;AACvB,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,qBAAqB;AAEzD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA,SAASc,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMuB,QAAQ,GAAGb,WAAW,EAAE;EAE9B,eAAec,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrCJ,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMhB,0BAA0B,CAACH,IAAI,EAAEsB,KAAK,EAAEC,QAAQ,CAAC,CACpDC,IAAI,CAAC,MAAOC,KAAK,IAAK;MACrB,IAAIC,GAAG,GAAGD,KAAK,CAACT,IAAI,CAACU,GAAG;MAExB,MAAMC,MAAM,GAAGvB,GAAG,CAACH,EAAE,EAAE,OAAO,EAAEyB,GAAG,CAAC;MACpC,MAAME,OAAO,GAAG,MAAMvB,MAAM,CAACsB,MAAM,CAAC;MAEpC,IAAIE,IAAI,GAAG;QACTH,GAAG,EAAEA,GAAG;QACRI,IAAI,EAAEF,OAAO,CAACC,IAAI,EAAE,CAACC,IAAI;QACzBR,KAAK,EAAEG,KAAK,CAACT,IAAI,CAACM,KAAK;QACvBS,SAAS,EAAEH,OAAO,CAACC,IAAI,EAAE,CAACE;MAC5B,CAAC;MAEDd,OAAO,CAACY,IAAI,CAAC;MACbG,WAAW,CAACH,IAAI,CAAC;MACjBV,cAAc,CAAC,KAAK,CAAC;MACrBX,KAAK,CAACyB,OAAO,CAAC,cAAc,CAAC;MAC7Bb,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAElBhB,cAAc,CAAC,KAAK,CAAC;MACrBX,KAAK,CAAC2B,KAAK,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;EACN;EACA;EACA,eAAeG,MAAMA,CAAChB,KAAK,EAAEC,QAAQ,EAAEgB,IAAI,EAAE;IAC3CpB,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMjB,8BAA8B,CAACF,IAAI,EAAEsB,KAAK,EAAEC,QAAQ,CAAC,CACxDC,IAAI,CAAC,MAAOC,KAAK,IAAK;MACrB,IAAIC,GAAG,GAAGD,KAAK,CAACT,IAAI,CAACU,GAAG;MAExB,MAAMpB,MAAM,CAACF,GAAG,CAACH,EAAE,EAAE,OAAO,EAAEyB,GAAG,CAAC,EAAE;QAClCI,IAAI,EAAES,IAAI;QACVR,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;MAAA,CACAP,IAAI,CAAC,MAAM;QACV,IAAIK,IAAI,GAAG;UACTH,GAAG,EAAEA,GAAG;UACRI,IAAI,EAAES,IAAI;UACVjB,KAAK,EAAEG,KAAK,CAACT,IAAI,CAACM,KAAK;UACvBS,SAAS,EAAE;QACb,CAAC;QACDd,OAAO,CAACY,IAAI,CAAC;QACbG,WAAW,CAACH,IAAI,CAAC;QACjBV,cAAc,CAAC,KAAK,CAAC;QACrBX,KAAK,CAACyB,OAAO,CAAC,4BAA4B,CAAC;QAC3Cb,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBhB,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;EACN;EACA,SAASa,WAAWA,CAACH,IAAI,EAAE;IACzBW,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI,CAAC,CAAC;EAC1D;EAEA,oBACEnB,OAAA,CAACC,WAAW,CAACiC,QAAQ;IACnBnB,KAAK,EAAE;MACLoB,MAAM,EAAE,CAAC,CAAC7B,IAAI;MACdA,IAAI;MACJK,MAAM;MACNiB,MAAM;MACNpB;IACF,CAAE;IAAAH,QAAA,EAEDA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAE3B;AAACnC,EAAA,CApFQF,YAAY;EAAA,QAIFL,WAAW;AAAA;AAAA2C,EAAA,GAJrBtC,YAAY;AAqFrB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}