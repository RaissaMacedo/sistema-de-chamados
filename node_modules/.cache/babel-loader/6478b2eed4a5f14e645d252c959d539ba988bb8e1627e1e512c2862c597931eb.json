{"ast":null,"code":"var _jsxFileName = \"/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/contexts/auth.js\",\n  _s = $RefreshSig$();\n// autenticação\nimport { useState, createContext, useEffect } from 'react';\nimport { auth, db } from '../services/firebaseConnection';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport { doc, getDoc, setDoc } from '@firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n// O contexto foi projetado para compartilhar dados que podem ser considerados \"globais\"\nfunction AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loadingAuth, setLoadingAuth] = useState(false);\n  function signIn(email, password) {\n    console.log(email);\n    console.log(password);\n    alert('Logado com sucesso');\n  }\n  // cadastrar um novo user\n  async function signUp(email, password, name) {\n    setLoadingAuth(true);\n    await createUserWithEmailAndPassword(auth, email, password).then(async value => {\n      let uid = value.user.uid;\n      await setDoc(doc(db, 'users', uid), {\n        nome: name,\n        avatarUrl: null\n      }) // criando uma coleção de users e dentro criando doc de usuario\n      .then(() => {\n        alert('Cadastro com sucesso');\n        setLoadingAuth(false);\n      });\n    }).catch(error => {\n      console.log(error);\n      setLoadingAuth(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user,\n      signIn,\n      signUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"EeFW0dRW+Pl0/P25RB5InL0NHwU=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","createContext","useEffect","auth","db","createUserWithEmailAndPassword","doc","getDoc","setDoc","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","loadingAuth","setLoadingAuth","signIn","email","password","console","log","alert","signUp","name","then","value","uid","nome","avatarUrl","catch","error","Provider","signed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raissa/Documentos/Projetos-dev/REACT/so-called-system/src/contexts/auth.js"],"sourcesContent":["// autenticação\nimport { useState, createContext, useEffect } from 'react';\nimport { auth, db } from '../services/firebaseConnection';\nimport { createUserWithEmailAndPassword } from '@firebase/auth';\nimport { doc, getDoc, setDoc } from '@firebase/firestore';\n\nexport const AuthContext = createContext({});\n// O contexto foi projetado para compartilhar dados que podem ser considerados \"globais\"\nfunction AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loadingAuth, setLoadingAuth] = useState(false);\n\n  function signIn(email, password) {\n    console.log(email);\n    console.log(password);\n    alert('Logado com sucesso');\n  }\n  // cadastrar um novo user\n  async function signUp(email, password, name) {\n    setLoadingAuth(true);\n\n    await createUserWithEmailAndPassword(auth, email, password)\n      .then(async (value) => {\n        let uid = value.user.uid;\n\n        await setDoc(doc(db, 'users', uid), {\n          nome: name,\n          avatarUrl: null,\n        }) // criando uma coleção de users e dentro criando doc de usuario\n          .then(() => {\n            alert('Cadastro com sucesso');\n            setLoadingAuth(false);\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoadingAuth(false);\n      });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        signed: !!user,\n        user,\n        signIn,\n        signUp,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\nexport default AuthProvider;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,EAAE,QAAQ,gCAAgC;AACzD,SAASC,8BAA8B,QAAQ,gBAAgB;AAC/D,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA,SAASW,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAErD,SAASoB,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAClBE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBG,KAAK,CAAC,oBAAoB,CAAC;EAC7B;EACA;EACA,eAAeC,MAAMA,CAACL,KAAK,EAAEC,QAAQ,EAAEK,IAAI,EAAE;IAC3CR,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMd,8BAA8B,CAACF,IAAI,EAAEkB,KAAK,EAAEC,QAAQ,CAAC,CACxDM,IAAI,CAAC,MAAOC,KAAK,IAAK;MACrB,IAAIC,GAAG,GAAGD,KAAK,CAACb,IAAI,CAACc,GAAG;MAExB,MAAMtB,MAAM,CAACF,GAAG,CAACF,EAAE,EAAE,OAAO,EAAE0B,GAAG,CAAC,EAAE;QAClCC,IAAI,EAAEJ,IAAI;QACVK,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;MAAA,CACAJ,IAAI,CAAC,MAAM;QACVH,KAAK,CAAC,sBAAsB,CAAC;QAC7BN,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC;IACN,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;MAChBX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;MAClBf,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;EACN;EAEA,oBACET,OAAA,CAACC,WAAW,CAACwB,QAAQ;IACnBN,KAAK,EAAE;MACLO,MAAM,EAAE,CAAC,CAACpB,IAAI;MACdA,IAAI;MACJI,MAAM;MACNM;IACF,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAE3B;AAAC1B,EAAA,CA5CQF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA6CrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}